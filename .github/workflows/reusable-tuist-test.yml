name: reusables/tuist-test
on:
  workflow_dispatch:
    inputs:
      scheme:
        description: 'The scheme to build'
        required: false
        type: string
  workflow_call:
    inputs:
      scheme:
        description: 'The scheme to build'
        required: false
        type: string
jobs:
  test:
    runs-on: macos-15
    env:
      TUIST_TEST_PLATFORM: iOS
      XDG_CACHE_HOME: ${{ github.workspace }}/.cache
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # @v4.3.0 https://github.com/actions/checkout

      - uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2 https://github.com/jdx/mise-action
        with:
          install: true
          install_args: "tuist"
          cache: true
          log_level: debug

      - name: Cleanup
        run: |
          tuist clean

      - name: Tuist Install
        run: |
          tuist install

      - uses: actions/cache/restore@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0 https://github.com/actions/cache
        id: tuist-cache
        with:
          path: ${{ env.XDG_CACHE_HOME }}/tuist/Binaries
          key: ${{ runner.os }}-spm-${{ hashFiles('Tuist/Package.resolved') }}

      - name: Tuist Cache
        run: |
          echo "Tuist cache contents:"
          ls -la $XDG_CACHE_HOME/tuist/Binaries
          echo "Check generated caches:"
          tuist hash cache
          # tuist cache --external-only
          # echo "Tuist cache contents:"
          # ls -la $XDG_CACHE_HOME/tuist/Binaries

      # - uses: actions/cache/save@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0 https://github.com/actions/cache
      #   if: steps.tuist-cache.outputs.cache-hit != 'true'
      #   with:
      #     path: ${{ env.XDG_CACHE_HOME }}/tuist/Binaries
      #     key: ${{ runner.os }}-spm-${{ hashFiles('Tuist/Package.resolved') }}

      - name: Tuist Generate
        run: |
          # Running tuist generate to propagate only target destinations / platforms
          tuist generate --no-open

      - name: Test
        run: |
          tuist test ${{ inputs.scheme }}
